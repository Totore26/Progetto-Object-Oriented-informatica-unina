{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23140\viewh10320\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
BCE\
BOURDER (INTERFACCIA GRAFICA)\
Controller (cuore del programma)\
ENTITY(LE ENTITA\'92 DEL DOMINIO DEL PROBLEMA)\
\
SOLO IL CONTROLLER LAVORA FRA QUESTE DUE COSE\
\
DAO (serve da modello per astrarre da quale database sto utilizzando) SERVE ALLA COMUNICAZIONE CON IL DATABASE\
\
\'c8 l\'92interfaccia (classe) \'e8 l\'92API devo separare interfaccia e implementazione. (Tutte le funzioni per una data entit\'e0).\
(FARE UNA LIBRERIA CHE IMPLEMENTA IN POSTGRESQL LE INTERFACCE DAO).\
\
\
Nel MAIN CREO IL CONTROLLER CHE E\'92 UNICO PER L\'92APPLICAZIONE. \
\
B E D sono tutte indipendenti. Il Dao dall\'92entit\'e0 sono separate.\
(Boulder entity database)\
\
Il model e il database devono essere sincronizzati;\
Ovviamente, l\'92architettura DAO deve avere proprie classi che poi passa al controller che a sua volta converte in model.\
\
}